buildscript {
    ext.kotlin_version = '1.2.41'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'

allprojects {
    apply plugin: 'maven'
    group = 'ru.fewizz.wrap.gl'
    version = '0.0.1'
}


sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    testCompile project(':glwrap-lwjgl')
    //testCompile project(':android')
    testCompile 'org.joml:joml:1.9.9'
    testCompile 'org.lwjgl:lwjgl-glfw:3.1.6'
    testRuntime 'org.lwjgl:lwjgl-glfw:3.1.6:natives-windows'
    testRuntime 'org.lwjgl:lwjgl-opengl:3.1.6:natives-windows'
    testRuntime 'org.lwjgl:lwjgl:3.1.6:natives-windows'
    testCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

/*task lwjgl(type: Jar, dependsOn: project(':glwrap-lwjgl').task('assemble')) {
    classifier = 'lwjgl'
    //from project('glwrap-lwjgl').file('build/classes/java')
}*/

artifacts {
    archives sourcesJar
    archives javadocJar
    archives tasks.getByPath(':glwrap-lwjgl:jar')//project(':glwrap-lwjgl').task('assemble')//lwjgl
}

compileKotlin.kotlinOptions.jvmTarget = "1.6"
compileTestKotlin.kotlinOptions.jvmTarget = "1.6"